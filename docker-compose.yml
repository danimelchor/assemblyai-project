version: '3.8'

services:
  flask:
    restart: always
    build:
      context: .
      dockerfile: ./compose/FlaskDockerfile
    ports:
      - 5001:80
    image: dmelchor/assemblyai-hackathon-flask
    command: ./start.sh
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - minio
  celery:
    restart: always
    build:
      context: .
      dockerfile: ./compose/CeleryDockerfile
    command: celery -A tasks.celery worker --loglevel=info
    image: dmelchor/assemblyai-hackathon-celery
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - minio
      - flask
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 60 1 --loglevel warning
  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
      - ./initial.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=assembly_ai
  react:
    restart: always
    build:
      context: .
      dockerfile: ./compose/ReactDockerfileProd
    image: dmelchor/assemblyai-hackathon-react
    ports:
      - 3000:80
    command: nginx -g 'daemon off;'
    env_file:
      - .env
    depends_on:
      - flask
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio_storage:/data
    environment:
      MINIO_ROOT_USER: minio_admin
      MINIO_ROOT_PASSWORD: minio_admin
    command: server --console-address ":9001" /data
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio_admin minio_admin;
      /usr/bin/mc mb myminio/dmelchor-assemblyai-hackathon;
      /usr/bin/mc policy set public myminio/dmelchor-assemblyai-hackathon;
      exit 0;
      "